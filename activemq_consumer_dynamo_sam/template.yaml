AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  activemq_event_consumer_function

  Sample SAM Template for activemq-consumer-with-sam

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60

Resources:
  LambdaActiveMQConsumerJavaFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: java-activemq-consumer-dynamodb-sam
      CodeUri: activemq_event_consumer_function
      Handler: com.amazonaws.services.lambda.samples.events.activemq.HandlerActiveMQ::handleRequest
      Runtime: java11
      Architectures:
        - x86_64
      MemorySize: 512
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          DYNAMO_DB_TABLE: !Ref ActiveMQDynamoDBTable
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1 # More info about tiered compilation https://aws.amazon.com/blogs/compute/optimizing-aws-lambda-function-performance-for-java/
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroup
        SubnetIds:
          - !Ref Subnet1
          - !Ref Subnet2
      Events:
        MQEvent:
          Type: MQ
          Properties:
            BatchSize: 100
            MaximumBatchingWindowInSeconds: 5
            Broker:
              !Join ['', ["arn:", "aws:", "mq:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":", "broker:", !Ref ActiveMQBrokerName, ":", !Ref ActiveMQBrokerUniqueString]]
            Queues:
              - !Ref ActiveMQQueue
            SourceAccessConfigurations:
              - Type: BASIC_AUTH
                URI:
                  !Join ['', ["arn:", "aws:", "secretsmanager:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":", "secret:", !Ref SecretsManagerSecretForMQName, "-", !Ref SecretsManagerSecretForMQUniqueString]]
            
      Policies:
      - Statement:
        - Sid: ActiveMQPermissionsPolicy
          Effect: Allow
          Action: 
          - mq:DescribeBroker
          - secretsmanager:GetSecretValue
          - ec2:CreateNetworkInterface
          - ec2:DeleteNetworkInterface
          - ec2:DescribeNetworkInterfaces
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcs
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource: '*'
      - Statement:
        - Sid: DynamoDBPermissionsPolicy
          Effect: Allow
          Action:
          - dynamodb:GetItem
          - dynamodb:DeleteItem
          - dynamodb:PutItem
          - dynamodb:Scan
          - dynamodb:Query
          - dynamodb:UpdateItem
          - dynamodb:BatchWriteItem
          - dynamodb:BatchGetItem
          - dynamodb:DescribeTable
          - dynamodb:ConditionCheckItem
          Resource: 
          - !Join ['', ["arn:", "aws:", "dynamodb:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":", "table/", !Ref ActiveMQDynamoDBTable]]
          - !Join ['', ["arn:", "aws:", "dynamodb:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":", "table/", !Ref ActiveMQDynamoDBTable, "/index/*"]]
      
  ActiveMQDynamoDBTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: ActiveMQDynamoDBTableJava
      PrimaryKey:
        Name: MessageID
        Type: String
Parameters:  
  ActiveMQBrokerName:
    Type: String
    Description: Enter the name of the ActiveMQBroker that is part of the ARN
  ActiveMQBrokerUniqueString:
    Type: String
    Description: Enter the unique string of the ActiveMQBroker after the broker name in the ARN
  ActiveMQQueue:
    Type: String
    Description: Enter the name of the ActiveMQ queue from which the lambda function will consume messages
  SecretsManagerSecretForMQName:
    Type: String
    Description: Enter the name of the secret that has username/password for Active MQ
  SecretsManagerSecretForMQUniqueString:
    Type: String
    Description: Enter the unique string of the secret that has username/password for Active MQ
  Subnet1:
    Type: String
    Description: The first of the three private subnets in the ActiveMQ broker's VPC
  Subnet2:
    Type: String
    Description: The second of the three private subnets in the ActiveMQ broker's VPC
  SecurityGroup:
    Type: String
    Description: The security group associated with this function (use same ActiveMQ)
Outputs:
  LambdaActiveMQConsumerJavaFunction:
    Description: "Queue Consumer Lambda Function ARN"
    Value: !GetAtt LambdaActiveMQConsumerJavaFunction.Arn
