AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  s3_notifications_event_consumer_function

  Sample SAM Template for s3-notifications-consumer-with-sam

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 15

Resources:
  LambdaS3NotificationsConsumerJavaFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: java-s3-notifications-consumer-dynamodb-sam
      CodeUri: s3_notification_event_consumer_function
      Handler: com.amazonaws.services.lambda.samples.events.s3.notifications.HandlerS3Notifications::handleRequest
      Runtime: java11
      Architectures:
        - x86_64
      MemorySize: 512
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          DYNAMO_DB_TABLE: !Ref S3NotificationsDynamoDBTable
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1 # More info about tiered compilation https://aws.amazon.com/blogs/compute/optimizing-aws-lambda-function-performance-for-java/
      Events:
        S3NotificationEvent:
          Type: S3
          Properties:
            Bucket: !Ref S3Bucket
            Events:
              - 's3:ObjectCreated:*'
      Policies:
      - Statement:
        - Sid: S3ReadPermissionsPolicy
          Effect: Allow
          Action:
          - s3:GetObject
          - s3:ListBucket
          - s3:GetBucketLocation
          - s3:GetObjectVersion
          - s3:GetLifecycleConfiguration
          Resource:
          - !Join ['', ["arn:", "aws:", "s3:::", !Ref S3BucketName]]
          - !Join ['', ["arn:", "aws:", "s3:::", !Ref S3BucketName, "/*"]]
      - Statement:
        - Sid: DynamoDBPermissionsPolicy
          Effect: Allow
          Action:
          - dynamodb:GetItem
          - dynamodb:DeleteItem
          - dynamodb:PutItem
          - dynamodb:Scan
          - dynamodb:Query
          - dynamodb:UpdateItem
          - dynamodb:BatchWriteItem
          - dynamodb:BatchGetItem
          - dynamodb:DescribeTable
          - dynamodb:ConditionCheckItem
          Resource: 
          - !Join ['', ["arn:", "aws:", "dynamodb:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":", "table/", !Ref S3NotificationsDynamoDBTable]]
          - !Join ['', ["arn:", "aws:", "dynamodb:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":", "table/", !Ref S3NotificationsDynamoDBTable, "/index/*"]]
      
  S3NotificationsDynamoDBTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: S3NotificationsDynamoDBTableJava
      PrimaryKey:
        Name: MessageID
        Type: String 
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
        BucketName: !Ref S3BucketName
Parameters:  
  S3BucketName:
    Type: String
    Description: Enter the name of the S3 Bucket
Outputs:
  LambdaS3NotificationsConsumerJavaFunction:
    Description: "S3 Notifications Consumer Lambda Function ARN"
    Value: !GetAtt LambdaS3NotificationsConsumerJavaFunction.Arn
